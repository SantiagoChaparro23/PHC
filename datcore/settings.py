"""
Django settings for datcore project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from decouple import config, Csv
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# from django.conf import global_settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())


# Application definition
INSTALLED_APPS = [

    'users',
    'dashboard',
    'imports',
    'api',
    'lessons',
    'sddp',
    'configuration_sddp',

    'budgeted_hours',
    'reported_hours',

    'record_business_interactions',

    'vacations',

    'documents',
    
    'markers',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # 'django.contrib.humanize',

    'crispy_forms',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'datcore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'dashboard.processors.profile_url'
            ],
        },
    },
]

WSGI_APPLICATION = 'datcore.wsgi.application'

#   For send and receive data
DATA_UPLOAD_MAX_MEMORY_SIZE = 10000000000

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
DATABASES = {

     'default': {
        'ENGINE': config('DB_ENGINE'),
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT'),
    }

}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]


LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/


STATIC_URL = '/static/'

if DEBUG is False:
    STATIC_ROOT = os.path.join(BASE_DIR, '/static/')

STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

#STATIC_ROOT = 'static_root'

   


LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'



CRISPY_TEMPLATE_PACK = 'bootstrap4'


# TEMPLATE_CONTEXT_PROCESSORS = global_settings.TEMPLATE_CONTEXT_PROCESSORS + (
#     'dashboard.views.lang_context_processor',
# )


APP_ENV=config('APP_ENV')



MEDIA_ROOT = os.path.join(BASE_DIR)


MICROSOFT_PROVIDER = {
        'client_id': '408e5b32-51b5-48c9-9a2c-2dbb510bb03c',
        'secret': '5~6jHqUDy_O4sEDZCv5ga__p~vsPc4Zy7k',
        'key': '1d47faa0-c083-4f81-9e25-5f21edf8cb51',
        'authorize': 'https://login.microsoftonline.com/66d56c1d-d00f-4686-9a28-eb96d1eaf5bb/oauth2/v2.0/authorize',
        'token': 'https://login.microsoftonline.com/66d56c1d-d00f-4686-9a28-eb96d1eaf5bb/oauth2/v2.0/token',
        'callback': config('CALLBACK_MICROSOFT')
}


SITE_ROOT = os.path.dirname(os.path.realpath(__file__))

PROJECT_PATH = config('PROJECT_PATH')

EMAIL_USE_TLS = True
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_PORT = config('EMAIL_PORT')
EMAIL_SENDER = config('EMAIL_SENDER')
MAILJET_USER = config('MAILJET_USER')
MAILJET_PASSWORD= config('MAILJET_PASSWORD')


if APP_ENV != 'local':
    sentry_sdk.init(
        environment=APP_ENV,
        dsn="https://aeacdf9ab51d4150824f2acb6a27aaa9@o831080.ingest.sentry.io/5812501",
        integrations=[DjangoIntegration()],

        # Set traces_sample_rate to 1.0 to capture 100%
        # of transactions for performance monitoring.
        # We recommend adjusting this value in production.
        traces_sample_rate=1.0,

        # If you wish to associate users to errors (assuming you are using
        # django.contrib.auth) you may enable sending PII data.
        send_default_pii=True
    )


URL_SITE = config('URL_SITE')



AWS_SERVER_PUBLIC_KEY=config('AWS_SERVER_PUBLIC_KEY')
AWS_SERVER_SECRET_KEY=config('AWS_SERVER_SECRET_KEY')

# USE_THOUSAND_SEPARATOR = True
# NUMBER_GROUPING = (3, 3, 0)
# THOUSAND_SEPARATOR = ','